{"version":3,"sources":["components/Player.js","components/Song.js","data.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","currentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nexPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","chillHop","audio","uuidv4","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDurtion","animation","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98f2ceca.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay, faPause, faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\nconst Player = ({ audioRef, currentSong, isPlaying, setIsPlaying, setSongInfo, songInfo, songs, setCurrentSong, setSongs, }) => {\r\n    const activeLibraryHandler = (nexPrev) => {\r\n        const newSongs = songs.map((song) => {\r\n            if (song.id === nexPrev.id) {\r\n                return {\r\n                    ...song,\r\n                    active: true,\r\n                };\r\n            } else {\r\n                return {\r\n                    ...song,\r\n                    active: false,\r\n                };\r\n            };\r\n        });\r\n        setSongs(newSongs);\r\n    }\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        } else {\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    };\r\n\r\n    const getTime = (time) => {\r\n        return (\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        );\r\n    };\r\n\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({ ...setSongInfo, currentTime: e.target.value });\r\n    };\r\n\r\n    const skipTrackHandler = async (direction) => {\r\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n        if (direction === 'skip-forward') {\r\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n        };\r\n        if (direction === 'skip-back') {\r\n            if ((currentIndex - 1) % songs.length === -1) {\r\n                await setCurrentSong(songs[songs.length - 1]);\r\n                activeLibraryHandler(songs[songs.length - 1]);\r\n                if (isPlaying) audioRef.current.play();\r\n                return;\r\n            };\r\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n        };\r\n        if (isPlaying) audioRef.current.play();\r\n    };\r\n    const trackAnim = {\r\n        transform: `translatex(${songInfo.animationPercentage}%)`\r\n    };\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <div style={{ background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`, }} className=\"track\">\r\n                    <input min={0} max={songInfo.duration || 0} value={songInfo.currentTime} onChange={dragHandler} type=\"range\" />\r\n                    <div style={trackAnim} className=\"animate-track\"></div>\r\n                </div>\r\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} className='skip-back' size='2x' icon={faAngleLeft} />\r\n                <FontAwesomeIcon onClick={playSongHandler} className='play' size='2x' icon={isPlaying ? faPause : faPlay} />\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-forward')} className='skip-forward' size='2x' icon={faAngleRight} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;","import React from 'react';\r\n\r\n\r\nconst Song = ({currentSong}) => {\r\n    return(\r\n        <div className=\"song-container\">\r\n            <img alt={currentSong.name} src={currentSong.cover}></img>\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Song;","import { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nfunction chillHop() {\r\n    return [\r\n        {\r\n            name: \"Mirage\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg\",\r\n            artist: \"Nymano, j'san\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10136\",\r\n            id: uuidv4(),\r\n            active: true,\r\n            color: [\"#5F548C\", \"#F2A19C\"],\r\n        },\r\n        {\r\n            name: \"Momentary Loss\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/02/7f102bdde417f6ead9a120b2b931449e5c12b4da-1024x1024.jpg\",\r\n            artist: \"Aarigod\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=13009\",\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: [\"#65C16D\", \"#594730\"],\r\n        },\r\n        {\r\n            name: \"Playtime\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/07/1f3f4b923f3877c4c2da054eb5b3b53f009866a9-1024x1024.jpg\",\r\n            artist: \"L'Indécis\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=8450\",\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: [\"#DFD9BF\", \"#C28283\"],\r\n        },\r\n        {\r\n            name: \"Daylight\",\r\n            cover:\r\n              \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n            artist: \"Aiguille\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n            color: [\"#EF8EA9\", \"#ab417f\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n          },\r\n        {\r\n        name: \"Keep Going\",\r\n        cover:\r\n            \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n        artist: \"Swørn\",\r\n        audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n        color: [\"#CD607D\", \"#c94043\"],\r\n        id: uuidv4(),\r\n        active: false,\r\n        },\r\n        {\r\n        name: \"Nightfall\",\r\n        cover:\r\n            \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n        artist: \"Aiguille\",\r\n        audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n        color: [\"#EF8EA9\", \"#ab417f\"],\r\n        id: uuidv4(),\r\n        active: false,\r\n        },\r\n        {\r\n        name: \"Reflection\",\r\n        cover:\r\n            \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n        artist: \"Swørn\",\r\n        audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n        color: [\"#CD607D\", \"#c94043\"],\r\n        id: uuidv4(),\r\n        active: false,\r\n        },\r\n        {\r\n        name: \"Under the City Stars\",\r\n        cover:\r\n            \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n        artist: \"Aso, Middle School, Aviino\",\r\n        audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n        color: [\"#205950\", \"#2ab3bf\"],\r\n        id: uuidv4(),\r\n        active: false,\r\n        },\r\n    ]\r\n}\r\n\r\nexport default chillHop;","import React from 'react';\r\n\r\n\r\nconst LibrarySong = ({ song, songs, setCurrentSong, id, audioRef, isPlaying, setSongs }) => {\r\n    const songSelectHandler = async () => {\r\n        await setCurrentSong(song);\r\n        const newSongs = songs.map((song) => {\r\n            if (song.id === id) {\r\n                return {\r\n                    ...song,\r\n                    active: true,\r\n                };\r\n            } else {\r\n                return {\r\n                    ...song,\r\n                    active: false,\r\n                };\r\n            };\r\n        });\r\n        setSongs(newSongs);\r\n        if (isPlaying) audioRef.current.play();\r\n    };\r\n    return (\r\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : \"\"}`}>\r\n            <img alt={song.name} src={song.cover}></img>\r\n            <div className=\"song-description\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LibrarySong;","import React from 'react';\r\nimport LibrarySong from './LibrarySong';\r\n\r\n\r\nconst Library = ({songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus}) => {\r\n    return (\r\n        <div className={`library ${libraryStatus ? 'active-library' : \"\"}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-songs\">\r\n                {songs.map((song) => (<LibrarySong songs={songs} setCurrentSong={setCurrentSong} song={song} id={song.id} key={song.id} audioRef={audioRef} isPlaying={isPlaying} setSongs={setSongs} />))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Library;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\r\n    return (\r\n        <nav>\r\n            <h1>mazPlayer</h1>\r\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Nav;","import React, { useState, useRef } from 'react';\nimport './styles/app.scss'\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport data from './data';\nimport Library from './components/Library';\nimport Nav from './components/Nav';\n\nfunction App() {\n  const audioRef = useRef(null);\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    const roundedCurrent = Math.round(current);\n    const roundedDurtion = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDurtion) * 100);\n    setSongInfo({ ...songInfo, currentTime: current, duration, animationPercentage: animation });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n  return (\n    <div className={`App ${libraryStatus ? 'library-active' : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player setSongInfo={setSongInfo} songInfo={songInfo} audioRef={audioRef} isPlaying={isPlaying} setIsPlaying={setIsPlaying} currentSong={currentSong} songs={songs} setCurrentSong={setCurrentSong} setSongs={setSongs} />\n      <Library audioRef={audioRef} songs={songs} setCurrentSong={setCurrentSong} isPlaying={isPlaying} setSongs={setSongs} libraryStatus={libraryStatus} />\n      <audio onLoadedMetadata={timeUpdateHandler} onTimeUpdate={timeUpdateHandler} ref={audioRef} src={currentSong.audio} onEnded={songEndHandler}></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}